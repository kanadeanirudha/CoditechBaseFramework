@using Coditech.ViewModel
@model UserMasterViewModel
@{
    ViewBag.Title = Model.UserMasterId > 0 ? "View Details" : "";
    string actionName = ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString();
    string controllerName = ViewContext.RouteData.Values["controller"].ToString();
}
<div class="container-fluid add-product-wrapper main-content-wrapper mt-4">
    <div class="row">
        <div class="col-lg-1"></div>
        <div class="col-lg-12 d-flex align-items-center justify-content-center right-side">
            <div class="list-wrapper">
                <div class="align-items-center d-flex justify-content-between wrapper-header mb-3">
                    @if (Model.UserMasterId > 0)
                    {
                        <h1 class="text-center font-poppins">Update User</h1>
                    }
                    else
                    {
                        <h1 class="text-center font-poppins">Add New User</h1>
                    }
                    <div class="align-items-center d-flex justify-content-between gap-10">
                        <a class="btn btn-set-default add-new-product base-font-size" href="../@controllerName/List">
                            <i class="fa fa-arrow-circle-left" aria-hidden="true"></i> Back
                        </a>
                    </div>
                </div>
                <div class="form-wrapper">
                    <div class="row mb-lg-4">
                        <div class="col-lg-12 mb-4 mb-lg-0">
                            @using (Html.BeginForm(actionName, controllerName, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form form-horizontal", id = "frmProductMaster" }))
                            {
                                @Html.HiddenFor(x => x.UserMasterId)
                                <div class="form-3-wrapper">
                                    <div class="form-item-wrapper mb-5">
                                        <label for="product-name" class="form-label">First Name<span class="required">*</span> :</label>
                                        <div class="form-box mb-4">
                                            @if (Model.UserMasterId > 0)
                                            {
                                                @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", @disabled = "disabled" })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control" })
                                            }
                                            @Html.ValidationMessageFor(x => x.FirstName, null, new { @class = "red" })
                                        </div>
                                    </div>
                                    <div class="form-item-wrapper mb-5">
                                        <label for="product-name" class="form-label">Last Name<span class="required">*</span> :</label>
                                        <div class="form-box mb-4">
                                            @if (Model.UserMasterId > 0)
                                            {
                                                @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", @disabled = "disabled" })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
                                            }
                                            @Html.ValidationMessageFor(x => x.LastName, null, new { @class = "red" })
                                        </div>
                                    </div>
                                    <div class="form-item-wrapper mb-5">
                                        <div class="custom-control custom-checkbox">
                                            @Html.CheckBoxFor(x => x.IsActive, new { @class = "custom-control-input", @id = "isActive" })
                                            <label class="custom-control-label base-font-size" for="isActive">Is Active</label>
                                        </div>
                                    </div>
                                    <div class="form-item-wrapper mb-5">
                                        <div class="custom-control custom-checkbox">
                                            @Html.CheckBoxFor(x => x.IsDocumentApprovalAuthority, new { @class = "custom-control-input", @id = "IsDocumentApprovalAuthority" })
                                            <label class="custom-control-label base-font-size" for="IsDocumentApprovalAuthority">Is Document Approval Authority</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="align-items-center d-flex form-action justify-content-center">
                                    <button type="submit" class="btn login-btn btn-set-default">Save</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-1"></div>
    </div>
</div>